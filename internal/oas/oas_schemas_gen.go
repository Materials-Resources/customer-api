// Code generated by ogen, DO NOT EDIT.

package oas

import (
	"time"

	"github.com/go-faster/errors"
)

// Ref: #/components/schemas/Address
type Address struct {
	ID         string `json:"id"`
	Name       string `json:"name"`
	LineOne    string `json:"line_one"`
	LineTwo    string `json:"line_two"`
	City       string `json:"city"`
	State      string `json:"state"`
	PostalCode string `json:"postal_code"`
	Country    string `json:"country"`
}

// GetID returns the value of ID.
func (s *Address) GetID() string {
	return s.ID
}

// GetName returns the value of Name.
func (s *Address) GetName() string {
	return s.Name
}

// GetLineOne returns the value of LineOne.
func (s *Address) GetLineOne() string {
	return s.LineOne
}

// GetLineTwo returns the value of LineTwo.
func (s *Address) GetLineTwo() string {
	return s.LineTwo
}

// GetCity returns the value of City.
func (s *Address) GetCity() string {
	return s.City
}

// GetState returns the value of State.
func (s *Address) GetState() string {
	return s.State
}

// GetPostalCode returns the value of PostalCode.
func (s *Address) GetPostalCode() string {
	return s.PostalCode
}

// GetCountry returns the value of Country.
func (s *Address) GetCountry() string {
	return s.Country
}

// SetID sets the value of ID.
func (s *Address) SetID(val string) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *Address) SetName(val string) {
	s.Name = val
}

// SetLineOne sets the value of LineOne.
func (s *Address) SetLineOne(val string) {
	s.LineOne = val
}

// SetLineTwo sets the value of LineTwo.
func (s *Address) SetLineTwo(val string) {
	s.LineTwo = val
}

// SetCity sets the value of City.
func (s *Address) SetCity(val string) {
	s.City = val
}

// SetState sets the value of State.
func (s *Address) SetState(val string) {
	s.State = val
}

// SetPostalCode sets the value of PostalCode.
func (s *Address) SetPostalCode(val string) {
	s.PostalCode = val
}

// SetCountry sets the value of Country.
func (s *Address) SetCountry(val string) {
	s.Country = val
}

// Ref: #/components/schemas/Aggregation
type Aggregation map[string][]Bucket

func (s *Aggregation) init() Aggregation {
	m := *s
	if m == nil {
		m = map[string][]Bucket{}
		*s = m
	}
	return m
}

type BearerAuth struct {
	Token string
}

// GetToken returns the value of Token.
func (s *BearerAuth) GetToken() string {
	return s.Token
}

// SetToken sets the value of Token.
func (s *BearerAuth) SetToken(val string) {
	s.Token = val
}

// Ref: #/components/schemas/Branch
type Branch struct {
	ID   string `json:"id"`
	Name string `json:"name"`
}

// GetID returns the value of ID.
func (s *Branch) GetID() string {
	return s.ID
}

// GetName returns the value of Name.
func (s *Branch) GetName() string {
	return s.Name
}

// SetID sets the value of ID.
func (s *Branch) SetID(val string) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *Branch) SetName(val string) {
	s.Name = val
}

// Ref: #/components/schemas/Bucket
type Bucket struct {
	Value string `json:"value"`
	Count int    `json:"count"`
}

// GetValue returns the value of Value.
func (s *Bucket) GetValue() string {
	return s.Value
}

// GetCount returns the value of Count.
func (s *Bucket) GetCount() int {
	return s.Count
}

// SetValue sets the value of Value.
func (s *Bucket) SetValue(val string) {
	s.Value = val
}

// SetCount sets the value of Count.
func (s *Bucket) SetCount(val int) {
	s.Count = val
}

type CreateQuoteCreated struct {
	// ID of the created quote.
	QuoteID OptString `json:"quote_id"`
	// Status of the quote creation.
	Status OptString `json:"status"`
}

// GetQuoteID returns the value of QuoteID.
func (s *CreateQuoteCreated) GetQuoteID() OptString {
	return s.QuoteID
}

// GetStatus returns the value of Status.
func (s *CreateQuoteCreated) GetStatus() OptString {
	return s.Status
}

// SetQuoteID sets the value of QuoteID.
func (s *CreateQuoteCreated) SetQuoteID(val OptString) {
	s.QuoteID = val
}

// SetStatus sets the value of Status.
func (s *CreateQuoteCreated) SetStatus(val OptString) {
	s.Status = val
}

func (*CreateQuoteCreated) createQuoteRes() {}

type CreateQuoteReq struct {
	PurchaseOrder        string `json:"purchase_order"`
	DeliveryInstructions string `json:"delivery_instructions"`
	// Date of the request.  Should be in YYYY-MM-DD format (ISO 8601).
	DateRequested OptDateTime `json:"date_requested"`
	// List of items for the quote.
	Items []CreateQuoteReqItemsItem `json:"items"`
}

// GetPurchaseOrder returns the value of PurchaseOrder.
func (s *CreateQuoteReq) GetPurchaseOrder() string {
	return s.PurchaseOrder
}

// GetDeliveryInstructions returns the value of DeliveryInstructions.
func (s *CreateQuoteReq) GetDeliveryInstructions() string {
	return s.DeliveryInstructions
}

// GetDateRequested returns the value of DateRequested.
func (s *CreateQuoteReq) GetDateRequested() OptDateTime {
	return s.DateRequested
}

// GetItems returns the value of Items.
func (s *CreateQuoteReq) GetItems() []CreateQuoteReqItemsItem {
	return s.Items
}

// SetPurchaseOrder sets the value of PurchaseOrder.
func (s *CreateQuoteReq) SetPurchaseOrder(val string) {
	s.PurchaseOrder = val
}

// SetDeliveryInstructions sets the value of DeliveryInstructions.
func (s *CreateQuoteReq) SetDeliveryInstructions(val string) {
	s.DeliveryInstructions = val
}

// SetDateRequested sets the value of DateRequested.
func (s *CreateQuoteReq) SetDateRequested(val OptDateTime) {
	s.DateRequested = val
}

// SetItems sets the value of Items.
func (s *CreateQuoteReq) SetItems(val []CreateQuoteReqItemsItem) {
	s.Items = val
}

type CreateQuoteReqItemsItem struct {
	// ID of the product.
	ProductID string `json:"product_id"`
	// Quantity of the product.
	Quantity int `json:"quantity"`
}

// GetProductID returns the value of ProductID.
func (s *CreateQuoteReqItemsItem) GetProductID() string {
	return s.ProductID
}

// GetQuantity returns the value of Quantity.
func (s *CreateQuoteReqItemsItem) GetQuantity() int {
	return s.Quantity
}

// SetProductID sets the value of ProductID.
func (s *CreateQuoteReqItemsItem) SetProductID(val string) {
	s.ProductID = val
}

// SetQuantity sets the value of Quantity.
func (s *CreateQuoteReqItemsItem) SetQuantity(val int) {
	s.Quantity = val
}

// Represents error object.
// Ref: #/components/schemas/Error
type Error struct {
	Code    int64  `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *Error) GetCode() int64 {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *Error) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *Error) SetCode(val int64) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *Error) SetMessage(val string) {
	s.Message = val
}

// ErrorStatusCode wraps Error with StatusCode.
type ErrorStatusCode struct {
	StatusCode int
	Response   Error
}

// GetStatusCode returns the value of StatusCode.
func (s *ErrorStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *ErrorStatusCode) GetResponse() Error {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *ErrorStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *ErrorStatusCode) SetResponse(val Error) {
	s.Response = val
}

func (*ErrorStatusCode) createQuoteRes()          {}
func (*ErrorStatusCode) getOrderRes()             {}
func (*ErrorStatusCode) getProductRes()           {}
func (*ErrorStatusCode) listCustomerBranchesRes() {}
func (*ErrorStatusCode) listOrderInvoicesRes()    {}
func (*ErrorStatusCode) listOrderShipmentsRes()   {}
func (*ErrorStatusCode) searchProductsRes()       {}
func (*ErrorStatusCode) setActiveBranchRes()      {}

// GetOrderNotFound is response for GetOrder operation.
type GetOrderNotFound struct{}

func (*GetOrderNotFound) getOrderRes() {}

type GetOrderOK struct {
	Order Order `json:"order"`
}

// GetOrder returns the value of Order.
func (s *GetOrderOK) GetOrder() Order {
	return s.Order
}

// SetOrder sets the value of Order.
func (s *GetOrderOK) SetOrder(val Order) {
	s.Order = val
}

func (*GetOrderOK) getOrderRes() {}

// GetProductNotFound is response for GetProduct operation.
type GetProductNotFound struct{}

func (*GetProductNotFound) getProductRes() {}

type GetProductOK struct {
	Details Product `json:"details"`
}

// GetDetails returns the value of Details.
func (s *GetProductOK) GetDetails() Product {
	return s.Details
}

// SetDetails sets the value of Details.
func (s *GetProductOK) SetDetails(val Product) {
	s.Details = val
}

func (*GetProductOK) getProductRes() {}

// Ref: #/components/schemas/InvoiceSimplified
type InvoiceSimplified struct {
	ID         string  `json:"id"`
	OrderID    string  `json:"order_id"`
	CreatedAt  string  `json:"created_at"`
	Total      float64 `json:"total"`
	AmountPaid float64 `json:"amount_paid"`
}

// GetID returns the value of ID.
func (s *InvoiceSimplified) GetID() string {
	return s.ID
}

// GetOrderID returns the value of OrderID.
func (s *InvoiceSimplified) GetOrderID() string {
	return s.OrderID
}

// GetCreatedAt returns the value of CreatedAt.
func (s *InvoiceSimplified) GetCreatedAt() string {
	return s.CreatedAt
}

// GetTotal returns the value of Total.
func (s *InvoiceSimplified) GetTotal() float64 {
	return s.Total
}

// GetAmountPaid returns the value of AmountPaid.
func (s *InvoiceSimplified) GetAmountPaid() float64 {
	return s.AmountPaid
}

// SetID sets the value of ID.
func (s *InvoiceSimplified) SetID(val string) {
	s.ID = val
}

// SetOrderID sets the value of OrderID.
func (s *InvoiceSimplified) SetOrderID(val string) {
	s.OrderID = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *InvoiceSimplified) SetCreatedAt(val string) {
	s.CreatedAt = val
}

// SetTotal sets the value of Total.
func (s *InvoiceSimplified) SetTotal(val float64) {
	s.Total = val
}

// SetAmountPaid sets the value of AmountPaid.
func (s *InvoiceSimplified) SetAmountPaid(val float64) {
	s.AmountPaid = val
}

type ListCustomerBranchesOKApplicationJSON []Branch

func (*ListCustomerBranchesOKApplicationJSON) listCustomerBranchesRes() {}

type ListOrderInvoicesOKApplicationJSON []InvoiceSimplified

func (*ListOrderInvoicesOKApplicationJSON) listOrderInvoicesRes() {}

type ListOrderShipmentsOKApplicationJSON []ShipmentSimplified

func (*ListOrderShipmentsOKApplicationJSON) listOrderShipmentsRes() {}

// NewOptDateTime returns new OptDateTime with value set to v.
func NewOptDateTime(v time.Time) OptDateTime {
	return OptDateTime{
		Value: v,
		Set:   true,
	}
}

// OptDateTime is optional time.Time.
type OptDateTime struct {
	Value time.Time
	Set   bool
}

// IsSet returns true if OptDateTime was set.
func (o OptDateTime) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDateTime) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDateTime) SetTo(v time.Time) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDateTime) Get() (v time.Time, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDateTime) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptSearchProductsReqFilters returns new OptSearchProductsReqFilters with value set to v.
func NewOptSearchProductsReqFilters(v SearchProductsReqFilters) OptSearchProductsReqFilters {
	return OptSearchProductsReqFilters{
		Value: v,
		Set:   true,
	}
}

// OptSearchProductsReqFilters is optional SearchProductsReqFilters.
type OptSearchProductsReqFilters struct {
	Value SearchProductsReqFilters
	Set   bool
}

// IsSet returns true if OptSearchProductsReqFilters was set.
func (o OptSearchProductsReqFilters) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSearchProductsReqFilters) Reset() {
	var v SearchProductsReqFilters
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSearchProductsReqFilters) SetTo(v SearchProductsReqFilters) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSearchProductsReqFilters) Get() (v SearchProductsReqFilters, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptSearchProductsReqFilters) Or(d SearchProductsReqFilters) SearchProductsReqFilters {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #/components/schemas/Order
type Order struct {
	ID                   string      `json:"id"`
	ContactID            string      `json:"contact_id"`
	BranchID             string      `json:"branch_id"`
	PurchaseOrder        string      `json:"purchase_order"`
	Status               OrderStatus `json:"status"`
	DateCreated          time.Time   `json:"date_created"`
	DateRequested        time.Time   `json:"date_requested"`
	Taker                OptString   `json:"taker"`
	DeliveryInstructions string      `json:"delivery_instructions"`
	ShippingAddress      Address     `json:"shipping_address"`
	Total                float64     `json:"total"`
}

// GetID returns the value of ID.
func (s *Order) GetID() string {
	return s.ID
}

// GetContactID returns the value of ContactID.
func (s *Order) GetContactID() string {
	return s.ContactID
}

// GetBranchID returns the value of BranchID.
func (s *Order) GetBranchID() string {
	return s.BranchID
}

// GetPurchaseOrder returns the value of PurchaseOrder.
func (s *Order) GetPurchaseOrder() string {
	return s.PurchaseOrder
}

// GetStatus returns the value of Status.
func (s *Order) GetStatus() OrderStatus {
	return s.Status
}

// GetDateCreated returns the value of DateCreated.
func (s *Order) GetDateCreated() time.Time {
	return s.DateCreated
}

// GetDateRequested returns the value of DateRequested.
func (s *Order) GetDateRequested() time.Time {
	return s.DateRequested
}

// GetTaker returns the value of Taker.
func (s *Order) GetTaker() OptString {
	return s.Taker
}

// GetDeliveryInstructions returns the value of DeliveryInstructions.
func (s *Order) GetDeliveryInstructions() string {
	return s.DeliveryInstructions
}

// GetShippingAddress returns the value of ShippingAddress.
func (s *Order) GetShippingAddress() Address {
	return s.ShippingAddress
}

// GetTotal returns the value of Total.
func (s *Order) GetTotal() float64 {
	return s.Total
}

// SetID sets the value of ID.
func (s *Order) SetID(val string) {
	s.ID = val
}

// SetContactID sets the value of ContactID.
func (s *Order) SetContactID(val string) {
	s.ContactID = val
}

// SetBranchID sets the value of BranchID.
func (s *Order) SetBranchID(val string) {
	s.BranchID = val
}

// SetPurchaseOrder sets the value of PurchaseOrder.
func (s *Order) SetPurchaseOrder(val string) {
	s.PurchaseOrder = val
}

// SetStatus sets the value of Status.
func (s *Order) SetStatus(val OrderStatus) {
	s.Status = val
}

// SetDateCreated sets the value of DateCreated.
func (s *Order) SetDateCreated(val time.Time) {
	s.DateCreated = val
}

// SetDateRequested sets the value of DateRequested.
func (s *Order) SetDateRequested(val time.Time) {
	s.DateRequested = val
}

// SetTaker sets the value of Taker.
func (s *Order) SetTaker(val OptString) {
	s.Taker = val
}

// SetDeliveryInstructions sets the value of DeliveryInstructions.
func (s *Order) SetDeliveryInstructions(val string) {
	s.DeliveryInstructions = val
}

// SetShippingAddress sets the value of ShippingAddress.
func (s *Order) SetShippingAddress(val Address) {
	s.ShippingAddress = val
}

// SetTotal sets the value of Total.
func (s *Order) SetTotal(val float64) {
	s.Total = val
}

// Ref: #/components/schemas/OrderStatus
type OrderStatus string

const (
	OrderStatusUnspecified     OrderStatus = "unspecified"
	OrderStatusApproved        OrderStatus = "approved"
	OrderStatusCompleted       OrderStatus = "completed"
	OrderStatusCancelled       OrderStatus = "cancelled"
	OrderStatusPendingApproval OrderStatus = "pending_approval"
)

// AllValues returns all OrderStatus values.
func (OrderStatus) AllValues() []OrderStatus {
	return []OrderStatus{
		OrderStatusUnspecified,
		OrderStatusApproved,
		OrderStatusCompleted,
		OrderStatusCancelled,
		OrderStatusPendingApproval,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s OrderStatus) MarshalText() ([]byte, error) {
	switch s {
	case OrderStatusUnspecified:
		return []byte(s), nil
	case OrderStatusApproved:
		return []byte(s), nil
	case OrderStatusCompleted:
		return []byte(s), nil
	case OrderStatusCancelled:
		return []byte(s), nil
	case OrderStatusPendingApproval:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *OrderStatus) UnmarshalText(data []byte) error {
	switch OrderStatus(data) {
	case OrderStatusUnspecified:
		*s = OrderStatusUnspecified
		return nil
	case OrderStatusApproved:
		*s = OrderStatusApproved
		return nil
	case OrderStatusCompleted:
		*s = OrderStatusCompleted
		return nil
	case OrderStatusCancelled:
		*s = OrderStatusCancelled
		return nil
	case OrderStatusPendingApproval:
		*s = OrderStatusPendingApproval
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/OrderSummary
type OrderSummary struct {
	ID            string      `json:"id"`
	ContactID     string      `json:"contact_id"`
	BranchID      string      `json:"branch_id"`
	PurchaseOrder string      `json:"purchase_order"`
	Status        OrderStatus `json:"status"`
	DateCreated   string      `json:"date_created"`
	DateRequested string      `json:"date_requested"`
}

// GetID returns the value of ID.
func (s *OrderSummary) GetID() string {
	return s.ID
}

// GetContactID returns the value of ContactID.
func (s *OrderSummary) GetContactID() string {
	return s.ContactID
}

// GetBranchID returns the value of BranchID.
func (s *OrderSummary) GetBranchID() string {
	return s.BranchID
}

// GetPurchaseOrder returns the value of PurchaseOrder.
func (s *OrderSummary) GetPurchaseOrder() string {
	return s.PurchaseOrder
}

// GetStatus returns the value of Status.
func (s *OrderSummary) GetStatus() OrderStatus {
	return s.Status
}

// GetDateCreated returns the value of DateCreated.
func (s *OrderSummary) GetDateCreated() string {
	return s.DateCreated
}

// GetDateRequested returns the value of DateRequested.
func (s *OrderSummary) GetDateRequested() string {
	return s.DateRequested
}

// SetID sets the value of ID.
func (s *OrderSummary) SetID(val string) {
	s.ID = val
}

// SetContactID sets the value of ContactID.
func (s *OrderSummary) SetContactID(val string) {
	s.ContactID = val
}

// SetBranchID sets the value of BranchID.
func (s *OrderSummary) SetBranchID(val string) {
	s.BranchID = val
}

// SetPurchaseOrder sets the value of PurchaseOrder.
func (s *OrderSummary) SetPurchaseOrder(val string) {
	s.PurchaseOrder = val
}

// SetStatus sets the value of Status.
func (s *OrderSummary) SetStatus(val OrderStatus) {
	s.Status = val
}

// SetDateCreated sets the value of DateCreated.
func (s *OrderSummary) SetDateCreated(val string) {
	s.DateCreated = val
}

// SetDateRequested sets the value of DateRequested.
func (s *OrderSummary) SetDateRequested(val string) {
	s.DateRequested = val
}

// Ref: #/components/schemas/PageMetadata
type PageMetadata struct {
	TotalPages   int `json:"total_pages"`
	TotalRecords int `json:"total_records"`
}

// GetTotalPages returns the value of TotalPages.
func (s *PageMetadata) GetTotalPages() int {
	return s.TotalPages
}

// GetTotalRecords returns the value of TotalRecords.
func (s *PageMetadata) GetTotalRecords() int {
	return s.TotalRecords
}

// SetTotalPages sets the value of TotalPages.
func (s *PageMetadata) SetTotalPages(val int) {
	s.TotalPages = val
}

// SetTotalRecords sets the value of TotalRecords.
func (s *PageMetadata) SetTotalRecords(val int) {
	s.TotalRecords = val
}

// Ref: #/components/schemas/Product
type Product struct {
	ID          string    `json:"id"`
	Sn          string    `json:"sn"`
	Name        string    `json:"name"`
	Description OptString `json:"description"`
	ImageURL    OptString `json:"image_url"`
}

// GetID returns the value of ID.
func (s *Product) GetID() string {
	return s.ID
}

// GetSn returns the value of Sn.
func (s *Product) GetSn() string {
	return s.Sn
}

// GetName returns the value of Name.
func (s *Product) GetName() string {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *Product) GetDescription() OptString {
	return s.Description
}

// GetImageURL returns the value of ImageURL.
func (s *Product) GetImageURL() OptString {
	return s.ImageURL
}

// SetID sets the value of ID.
func (s *Product) SetID(val string) {
	s.ID = val
}

// SetSn sets the value of Sn.
func (s *Product) SetSn(val string) {
	s.Sn = val
}

// SetName sets the value of Name.
func (s *Product) SetName(val string) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *Product) SetDescription(val OptString) {
	s.Description = val
}

// SetImageURL sets the value of ImageURL.
func (s *Product) SetImageURL(val OptString) {
	s.ImageURL = val
}

type SearchProductResponse struct {
	Aggregations Aggregation  `json:"aggregations"`
	Metadata     PageMetadata `json:"metadata"`
	Products     []Product    `json:"products"`
}

// GetAggregations returns the value of Aggregations.
func (s *SearchProductResponse) GetAggregations() Aggregation {
	return s.Aggregations
}

// GetMetadata returns the value of Metadata.
func (s *SearchProductResponse) GetMetadata() PageMetadata {
	return s.Metadata
}

// GetProducts returns the value of Products.
func (s *SearchProductResponse) GetProducts() []Product {
	return s.Products
}

// SetAggregations sets the value of Aggregations.
func (s *SearchProductResponse) SetAggregations(val Aggregation) {
	s.Aggregations = val
}

// SetMetadata sets the value of Metadata.
func (s *SearchProductResponse) SetMetadata(val PageMetadata) {
	s.Metadata = val
}

// SetProducts sets the value of Products.
func (s *SearchProductResponse) SetProducts(val []Product) {
	s.Products = val
}

func (*SearchProductResponse) searchProductsRes() {}

type SearchProductsReq struct {
	SortBy  OptString                   `json:"sort_by"`
	Filters OptSearchProductsReqFilters `json:"filters"`
	Page    OptInt                      `json:"page"`
	Query   OptString                   `json:"query"`
}

// GetSortBy returns the value of SortBy.
func (s *SearchProductsReq) GetSortBy() OptString {
	return s.SortBy
}

// GetFilters returns the value of Filters.
func (s *SearchProductsReq) GetFilters() OptSearchProductsReqFilters {
	return s.Filters
}

// GetPage returns the value of Page.
func (s *SearchProductsReq) GetPage() OptInt {
	return s.Page
}

// GetQuery returns the value of Query.
func (s *SearchProductsReq) GetQuery() OptString {
	return s.Query
}

// SetSortBy sets the value of SortBy.
func (s *SearchProductsReq) SetSortBy(val OptString) {
	s.SortBy = val
}

// SetFilters sets the value of Filters.
func (s *SearchProductsReq) SetFilters(val OptSearchProductsReqFilters) {
	s.Filters = val
}

// SetPage sets the value of Page.
func (s *SearchProductsReq) SetPage(val OptInt) {
	s.Page = val
}

// SetQuery sets the value of Query.
func (s *SearchProductsReq) SetQuery(val OptString) {
	s.Query = val
}

type SearchProductsReqFilters map[string][]string

func (s *SearchProductsReqFilters) init() SearchProductsReqFilters {
	m := *s
	if m == nil {
		m = map[string][]string{}
		*s = m
	}
	return m
}

type SetActiveBranchBadRequest Error

func (*SetActiveBranchBadRequest) setActiveBranchRes() {}

type SetActiveBranchForbidden Error

func (*SetActiveBranchForbidden) setActiveBranchRes() {}

type SetActiveBranchOK struct {
	Message OptString `json:"message"`
}

// GetMessage returns the value of Message.
func (s *SetActiveBranchOK) GetMessage() OptString {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *SetActiveBranchOK) SetMessage(val OptString) {
	s.Message = val
}

func (*SetActiveBranchOK) setActiveBranchRes() {}

type SetActiveBranchReq struct {
	// ID of the branch to set as active.
	BranchID string `json:"branch_id"`
}

// GetBranchID returns the value of BranchID.
func (s *SetActiveBranchReq) GetBranchID() string {
	return s.BranchID
}

// SetBranchID sets the value of BranchID.
func (s *SetActiveBranchReq) SetBranchID(val string) {
	s.BranchID = val
}

// Ref: #/components/schemas/ShipmentSimplified
type ShipmentSimplified struct {
	ID              string `json:"id"`
	OrderID         string `json:"order_id"`
	InvoiceID       string `json:"invoice_id"`
	CarrierName     string `json:"carrier_name"`
	CarrierTracking string `json:"carrier_tracking"`
}

// GetID returns the value of ID.
func (s *ShipmentSimplified) GetID() string {
	return s.ID
}

// GetOrderID returns the value of OrderID.
func (s *ShipmentSimplified) GetOrderID() string {
	return s.OrderID
}

// GetInvoiceID returns the value of InvoiceID.
func (s *ShipmentSimplified) GetInvoiceID() string {
	return s.InvoiceID
}

// GetCarrierName returns the value of CarrierName.
func (s *ShipmentSimplified) GetCarrierName() string {
	return s.CarrierName
}

// GetCarrierTracking returns the value of CarrierTracking.
func (s *ShipmentSimplified) GetCarrierTracking() string {
	return s.CarrierTracking
}

// SetID sets the value of ID.
func (s *ShipmentSimplified) SetID(val string) {
	s.ID = val
}

// SetOrderID sets the value of OrderID.
func (s *ShipmentSimplified) SetOrderID(val string) {
	s.OrderID = val
}

// SetInvoiceID sets the value of InvoiceID.
func (s *ShipmentSimplified) SetInvoiceID(val string) {
	s.InvoiceID = val
}

// SetCarrierName sets the value of CarrierName.
func (s *ShipmentSimplified) SetCarrierName(val string) {
	s.CarrierName = val
}

// SetCarrierTracking sets the value of CarrierTracking.
func (s *ShipmentSimplified) SetCarrierTracking(val string) {
	s.CarrierTracking = val
}
